y = c(2, 3, 4),
m = c(20, 20, 20)
)
dat2 <- list(
id = 1:3,
y = c(1, 2, 6),
m = c(10, 20, 30)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "logtnormal", param = c(0, 1/2.5^2), initial = 0, fixed = FALSE))
formula <- y ~ 1 + f(id, model = "besag", graph = adj, scale.model = TRUE, constr = TRUE, hyper = tau_prior)
fit1 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat1,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit1$summary.fixed
fit1$summary.random
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fixed
fit2$summary.random
fit2$summary.lincomb
fit2$summary.linear.predictor
fit1$summary.linear.predictor
dat1 <- list(
id = 1:3,
y = c(2, 3, 4),
m = c(20, 20, 20)
)
dat2 <- list(
id = 1:3,
y = c(1, 3, 6),
m = c(10, 20, 30)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "logtnormal", param = c(0, 1/2.5^2), initial = 0, fixed = FALSE))
formula <- y ~ 1 + f(id, model = "besag", graph = adj, scale.model = TRUE, constr = TRUE, hyper = tau_prior)
fit1 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat1,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit1$summary.fixed
fit1$summary.linear.predictor
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fixed
fit2$summary.linear.predictor
fit1$summary.random
fit2$summary.random
fit1 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat1,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit1$summary.fixed
fit1$summary.random
fit1$summary.linear.predictor
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fixed
fit2$summary.random
fit2$summary.linear.predictor
fit1$summary.fitted.values
fit2$summary.fitted.values
dat1 <- list(
id = 1:3,
y = c(1, 10, 0),
m = c(1, 100, 100)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "logtnormal", param = c(0, 1/2.5^2), initial = 0, fixed = FALSE))
formula <- y ~ 1 + f(id, model = "besag", graph = adj, scale.model = TRUE, constr = TRUE, hyper = tau_prior)
fit1 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat1,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit1$summary.fixed
fit1$summary.random
fit1$summary.linear.predictor
fit1$summary.fitted.values
dat <- list(
id = 1:3,
y = c(1, 10, 0),
m = c(1, 100, 1000)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "logtnormal", param = c(0, 1/2.5^2), initial = 0, fixed = FALSE))
formula <- y ~ 1 + f(id, model = "besag", graph = adj, scale.model = TRUE, constr = TRUE, hyper = tau_prior)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat1,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit$summary.random
fit$summary.fitted.values
dat <- list(
id = 1:3,
y = c(1, 10, 0),
m = c(1, 100, 1000)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "logtnormal", param = c(0, 1/2.5^2), initial = 0, fixed = FALSE))
formula <- y ~ 1 + f(id, model = "besag", graph = adj, scale.model = TRUE, constr = TRUE, hyper = tau_prior)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit$summary.fitted.values
dat2 <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 10000)
)
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fitted.values
dat2 <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 10000000)
)
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fitted.values
dat2 <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 100)
)
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fitted.values
dat2 <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 10000)
)
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fitted.values
dat2 <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 100000)
)
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fitted.values
fit$summary.fitted.values
dat <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 1000)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "logtnormal", param = c(0, 1/2.5^2), initial = 0, fixed = FALSE))
formula <- y ~ 1 + f(id,
model = "besag",
graph = adj,
scale.model = TRUE,
constr = TRUE,
hyper = tau_prior)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit$summary.fitted.values
INLA::inla.doc("loggamma")
tau_prior <- list(prec = list(prior = "loggamma", param = c(1, 1), initial = 1, fixed = FALSE))
formula <- y ~ 1 + f(id,
model = "besag",
graph = adj,
scale.model = TRUE,
constr = TRUE,
hyper = tau_prior)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
dat <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 1000)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "loggamma", param = c(1, 1), initial = 1, fixed = FALSE))
formula <- y ~ 1 + f(id,
model = "besag",
graph = adj,
scale.model = TRUE,
constr = TRUE,
hyper = tau_prior)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit$summary.fitted.values
plot(fit$marginals.fitted.values[[2]])
plot(fit$marginals.fitted.values[[2]], type = "l")
fit$summary.fitted.values[2, 1]
fit$summary.fitted.values[2, "mode"]
dat2 <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 100000)
)
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fitted.values
plot(fit2$marginals.fitted.values[[2]], type = "l")
inla.rgeneric.wicar.model <- function(cmd = c("graph", "Q", "mu", "initial", "log.norm.const", "log.prior", "quit"), theta = NULL) {
envir <- parent.env(environment())
interpret.theta <- function() {
return(list(prec = exp(theta[1L]))) # L is used for integers, possibly it's faster and uses less memory
}
graph <- function() {
return(Q())
}
Q <- function() {
p <- interpret.theta()
return(p$prec * R) # Hopefully this stays sparse
}
mu <- function() {
return(numeric(0))
}
log.norm.const <- function() {
return(numeric(0)) # Compute it yourself please!
}
log.prior <- function() {
# Copying Havard's Gamma precision prior
p <- interpret.theta()
val <- dgamma(p$prec, shape = 1, rate = 1, log = TRUE) + theta[1L]
return(val)
}
initial <- function() {
return(1)
}
quit <- function() {
return(invisible())
}
if(is.null(theta)) {
theta <- initial()
}
val <- do.call(match.arg(cmd), args = list())
return(val)
}
M <- dat$m %*% t(dat$m) * adj
R <- diag(rowSums(M)) - M
R_scaled <- bsae::scale_gmrf_precision(R)$Q
R_scaled <- as(R_scaled, "sparseMatrix")
R_scaled
wicar <- INLA::inla.rgeneric.define(inla.rgeneric.wicar.model, R = R_scaled)
formula <- y ~ 1 + f(id, model = wicar)
fit3 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit3$summary.fixed
fit3$summary.fitted.values
library(INLA)
dat <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 100)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "loggamma", param = c(1, 1), initial = 1, fixed = FALSE))
formula <- y ~ 1 + f(id,
model = "besag",
graph = adj,
scale.model = TRUE,
constr = TRUE,
hyper = tau_prior)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit$summary.fitted.values
plot(fit$marginals.fitted.values[[2]], type = "l")
dat2 <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 10000)
)
fit2 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat2,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit2$summary.fitted.values
inla.rgeneric.wicar.model <- function(cmd = c("graph", "Q", "mu", "initial", "log.norm.const", "log.prior", "quit"), theta = NULL) {
envir <- parent.env(environment())
interpret.theta <- function() {
return(list(prec = exp(theta[1L]))) # L is used for integers, possibly it's faster and uses less memory
}
graph <- function() {
return(Q())
}
Q <- function() {
p <- interpret.theta()
return(p$prec * R) # Hopefully this stays sparse
}
mu <- function() {
return(numeric(0))
}
log.norm.const <- function() {
return(numeric(0)) # Compute it yourself please!
}
log.prior <- function() {
# Copying Havard's Gamma precision prior
p <- interpret.theta()
val <- dgamma(p$prec, shape = 1, rate = 1, log = TRUE) + theta[1L]
return(val)
}
initial <- function() {
return(1)
}
quit <- function() {
return(invisible())
}
if(is.null(theta)) {
theta <- initial()
}
val <- do.call(match.arg(cmd), args = list())
return(val)
}
M <- dat$m %*% t(dat$m) * adj
R <- diag(rowSums(M)) - M
R_scaled <- bsae::scale_gmrf_precision(R)$Q
R_scaled <- as(R_scaled, "sparseMatrix")
wicar <- INLA::inla.rgeneric.define(inla.rgeneric.wicar.model, R = R_scaled)
formula <- y ~ 1 + f(id, model = wicar)
fit3 <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit3$summary.fitted.values
dat <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 100)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "loggamma", param = c(1, 1), initial = 1, fixed = FALSE))
formula <- y ~ 1 + f(id,
model = "besag",
graph = adj,
scale.model = TRUE,
constr = TRUE,
hyper = tau_prior)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
dat <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 100)
)
adj <- rbind(c(0, 1, 0),
c(0, 0, 1),
c(0, 0, 0))
adj <- adj + t(adj)
tau_prior <- list(prec = list(prior = "loggamma", param = c(1, 1), initial = 1, fixed = FALSE))
formula <- y ~ 1 + f(id,
model = "besag",
graph = adj,
scale.model = TRUE,
constr = TRUE,
hyper = tau_prior)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit$summary.fitted.values
formula_jeff <- y ~ 1 + f(id,
model = "rw1",
hyper = tau_prior)
fit_jeff <- INLA::inla(formula_jeff,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit_jeff
fit_jeff$summary.fitted.values
dat <- list(
id = 1:3,
y = c(1, 1, 0),
m = c(1, 5, 1000)
)
formula_jeff <- y ~ 1 + f(id,
model = "rw1",
hyper = tau_prior)
fit_jeff <- INLA::inla(formula_jeff,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit_jeff$summary.fitted.values
formula_jeff <- y ~ 1 + f(id,
model = "rw1")
fit_jeff <- INLA::inla(formula_jeff,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit_jeff$summary.fitted.values
formula <- y ~ 1 + f(id,
model = "besag",
graph = adj,
scale.model = TRUE,
constr = TRUE)
fit <- INLA::inla(formula,
family = "binomial",
control.family = list(control.link = list(model = "logit")),
data = dat,
Ntrials = m,
control.predictor = list(compute = TRUE, link = 1))
fit$summary.fitted.values
