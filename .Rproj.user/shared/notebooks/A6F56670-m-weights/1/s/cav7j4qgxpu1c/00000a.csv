"0","inla.rgeneric.wicar.model <-function(cmd = c(""graph"", ""Q"", ""mu"", ""initial"",""log.norm.const"", ""log.prior"", ""quit""), theta = NULL) {"
"0","  envir <-parent.env(environment())"
"0","  "
"0","  interpret.theta <-function() {"
"0","    # L is used for integers, possibly faster / less memory"
"0","    return(list(prec =exp(theta[1L])))"
"0","  }"
"0","  "
"0","  graph <-function() {"
"0","    return(Q())"
"0","  }"
"0","  "
"0","  Q <-function() {"
"0","    p <-interpret.theta()"
"0","    return(p$prec*R) # This stays sparse"
"0","  }"
"0","  "
"0","  mu <-function() {"
"0","    return(numeric(0))"
"0","  }"
"0","  "
"0","  log.norm.const <-function() {"
"0","    return(numeric(0)) # Compute it yourself please!"
"0","  }"
"0","  "
"0","  log.prior <-function() {"
"0","    # Copying Havard's Gamma precision prior"
"0","    p <-interpret.theta()"
"0","    val <-dgamma(p$prec, shape = 1, rate = 1, log = TRUE) + theta[1L]"
"0","    return(val)"
"0","  }"
"0","  "
"0","  initial <-function() {"
"0","    return(1)"
"0","  }"
"0","  "
"0","  quit <-function() {"
"0","    return(invisible())"
"0","  }"
"0","  "
"0","  if(is.null(theta)) {"
"0","    theta <-initial()"
"0","  }"
"0","  "
"0","  val <-do.call(match.arg(cmd), args =list())"
"0","  return(val)"
"0","}"
